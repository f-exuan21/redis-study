plugins {
    id 'java'
    id 'org.springframework.boot' version "3.4.3"
    id 'jacoco'
}

group = 'com.app'
version = '1.0.0'

repositories {
    mavenCentral()
}

subprojects {
    group 'com.app'
    version '0.0.1'
    sourceCompatibility = '11'

    if (project.name != 'movie-domain-module') {
        apply plugin: 'org.springframework.boot'
        apply plugin: 'io.spring.dependency-management'
    }
    apply plugin: 'java-library'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.26'
        annotationProcessor 'org.projectlombok:lombok:1.18.26'
    }

    apply plugin: 'jacoco'

    jacoco {
        toolVersion = "0.8.13"
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test

        reports {
            html.required.set(true)
            xml.required.set(true)
            csv.required.set(true)
        }
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.80
                }
            }
        }
    }
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn subprojects.test
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    subprojects.each { subproject ->
        sourceSets subproject.sourceSets.main
    }
    reports {
        html.required.set(true)
        xml.required.set(true)
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

project(':movie-infrastructure-module') {
    dependencies {
        implementation project(':movie-domain-module')
    }
}

project(':movie-api-module') {
    dependencies {
        implementation project(':movie-domain-module')
        runtimeOnly project(':movie-infrastructure-module')
    }
}